The files in this directory are Matlab scripts that are used to help train a neural network
to replace the the fuel_cell_left_x subroutines in  module_fr_sfire_core.F 

Requires Deep Learning Toolbox, tested with Matlab R2022a

Quick start:

Running the script full_train.m will generate data, train a network, and compare network performance with a second set of data. Creating 10000 
samples will require less than a minute to complete the task.

How to use:
1) Generate some data to simulate the fire arrival time at four corners of a grid cell and
   the fuel constant that determines the burn rate. Run the function

	s = time_samps(n)
   
   to generate n samples. 

1a) Process the data so that maximum value is always in the lower left corner and max of diagonal is in the upper left.

	s = rotate_cell(s)

2) Compute the fuel left associated with the samples from step 1.

	r = fuel_int(s) % uses matlab integral2 function, slow

    or

	r = fuel_quad(s,n) % uses midpoint quadrature on an nxn grid, faster and nearly same result as above.

3) Train the network using s for the predictors and r as the responses. Training can be done using the   GUI in the apps tab for Neural Net Fittin and then selecting Import with s as predictors and r as responses, using radial button to indicate that observations are arranged in rows of the matrices. When data is imported, the green triangle train button will divide the data into training, validation and testing sets and optimize the network.
 
Optionally, scripts have been generated by Matlab to do the training of the network. Either of the two following scripts will train the network if s and r from the steps above are in the workspace.

         train_comprehensive.m 
         train_simple.m




